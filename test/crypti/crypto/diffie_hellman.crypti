
//public keys
p = 0x8b79f180cbd3f282de92e8b8f2d092674ffda61f01ed961f8ef04a1b7a3709ff748c2abf6226cf0c4538e48838193da456e92ee530ef7aa703e741585e475b26cd64fa97819181cef27de2449cd385c49c9b030f89873b5b7eaf063a788f00db3cb670c73846bc4f76af062d672bde8f29806b81548411ab48b99aebfd9c2d09
g = 0x029843c81d0ea285c41a49b1a2f8e11a56a4b39040dfbc5ec040150c16f72f874152f9c44c659d86f7717b2425b62597e9a453b13da327a31cde2cced600915252d30262d1e54f4f864ace0e484f98abdbb37ebb0ba4106af5f0935b744677fa2f7f3826dcef3a1586956105ebea805d871f34c46c25bc30fc66b2db26cb0a93

/*
 * Alice function
 */
def [E] Alice(p, g, key) {
	E = mod_exp(g, key, p)
}

/*
 * Bob function
 */
def [E] Bob(p, g, key) {
	E = mod_exp(g, key, p)
}

//a is private Alice key
a = 0x87e0beefd8122561e9c329d764c6e3b3dafe538a
//b is private Bob key
b = 0x4fc9904887ac7fabff87f054003547c2d9458c1f6f584c140d7271f8b266bb390af7e3f625a629bec9c6a057a4cbe1a556d5e3eb2ff1c6ff677a08b0c7c509110b9e7c6dbc961ca4360362d3dbcffc5bf2bb7207e0a5922f77cf5464b316aa49fb62b338ebcdb30bf573d07b663bb7777b69d6317df0a4f636ba3d9acbf9e8ac


A = Alice(p, g, a)
printf("[+] ya = %x\n", A);
B = Bob(p, g, b)
printf("[+] yb = %x\n", B);

K1 = Alice(p, B, a)
K2 = Bob(p, A, b)

if (K1 == K2) {
	printf("[+] Diffie - Hellman key exchange ok\n");
	printf("[+] Result key is %x\n", K1);
} else {
	printf("[-] Diffie - Hellman key excange fail\n");
	printf("[-] K1 = %d, K2 = %d\n", K1, K2);
}

