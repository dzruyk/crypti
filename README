Syntax description.

	prog 		->	global_expr
	
	global_expr	->	def func_name(argues) stmts
			|	stmts

	stmts		->	statesment
	
	statesment	->	{ stmts }
			|	if (logic_or) statesment [else statesment]
			|	for (expr; logic_or; expr) statesment
			|	while(logic_or) statesment
			|	break
			|	continue
			|	return [expr]
			|	expr
	
	expr		->	logic_or [ = expr]

	logic_or	->	logic_and [ || logic_or]

	logic_and	->	bool_or [ && bool_and]

	bool_or		->	bool_xor [ | bool_or]

	bool_xor	->	bool_and [ ^ bool_xor]

	bool_and	->	equity	[ & bool_and]

	equity		->	rel_op [ == equity]

	rel_op		->	add_expr [ > rel_op]
			|	add_expr [ >= rel_op]
			|	add_expr [ < rel_op]
			|	add_expr [ <= rel_op]
	

	add_expr	->	mul_expr [ + add_expr]
			|	mul_expr [ - add_expr]

	mul_expr	->	term [ * mul_expr]
			|	term [ / mul_expr]

	
	term		->	(expr)
			|	factor
	
	factor		->	identifier
			|	number
			|	EMPTY

	identifier	->	id
			|	id[logic_or]			//array reference
			|	id ([expr, ...])			//function call
	



Remarks:
1)	In id[statesment] statesment can't be EMPTY;
2)	Inside functions we can't define new functions;
3)	We can assign only to variables or array elements.

